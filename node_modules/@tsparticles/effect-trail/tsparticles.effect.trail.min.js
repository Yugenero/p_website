/*! For license information please see tsparticles.effect.trail.min.js.LICENSE.txt */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],e);else{var a="object"==typeof exports?e(require("@tsparticles/engine")):e(t.window);for(var i in a)("object"==typeof exports?exports:t)[i]=a[i]}}(this,(t=>(()=>{var e={303:e=>{e.exports=t}},a={};function i(t){var r=a[t];if(void 0!==r)return r.exports;var o=a[t]={exports:{}};return e[t](o,o.exports,i),o.exports}i.d=(t,e)=>{for(var a in e)i.o(e,a)&&!i.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};return(()=>{i.r(r),i.d(r,{loadTrailEffect:()=>s});var t=i(303);const e=.5,a=0,o=0,n={a:1,b:0,c:0,d:1};class l{draw(t){const{context:i,radius:r,particle:l,transformData:s}=t,f=2*r,c=l.container.retina.pixelRatio,d=l.getPosition(),p=l.trail;if(!p||!l.trailLength)return;const h=l.trailLength+r;if(p.push({color:i.fillStyle??i.strokeStyle,position:{x:d.x,y:d.y},transformData:{...t.transformData}}),p.length<2)return;for(;p.length>h;)p.shift();const x=Math.min(p.length,h),y=l.container.canvas.size.width+f,g=l.container.canvas.size.height+f;let u=p[x-1].position;for(let t=x;t>0;t--){const r=p[t-1],s=r.position,d=l.trailTransform?r.transformData??n:n;i.setTransform(d.a,d.b,d.c,d.d,s.x,s.y),i.beginPath(),i.moveTo(u.x-s.x,u.y-s.y);const h={x:(u.x+y)%y,y:(u.y+g)%g};if(Math.abs(u.x-s.x)>y*e||Math.abs(u.y-s.y)>g*e){u=s;continue}i.lineTo(Math.abs(u.x-s.x)>y*e?h.x:a,Math.abs(u.y-s.y)>g*e?h.y:o);const m=Math.max(t/x*f,c,l.trailMinWidth??-1),b=i.globalAlpha;i.globalAlpha=l.trailFade?t/x:1,i.lineWidth=l.trailMaxWidth?Math.min(m,l.trailMaxWidth):m,i.strokeStyle=r.color,i.stroke(),i.globalAlpha=b,u=s}i.setTransform(s.a,s.b,s.c,s.d,d.x,d.y)}particleInit(e,a){a.trail=[];const i=a.effectData;a.trailFade=i?.fade??!0,a.trailLength=(0,t.getRangeValue)(i?.length??10)*e.retina.pixelRatio,a.trailMaxWidth=i?.maxWidth?(0,t.getRangeValue)(i.maxWidth)*e.retina.pixelRatio:void 0,a.trailMinWidth=i?.minWidth?(0,t.getRangeValue)(i.minWidth)*e.retina.pixelRatio:void 0,a.trailTransform=i?.transform??!1}}async function s(t,e=!0){await t.addEffect("trail",new l,e)}})(),r})()));