/*! For license information please see tsparticles.plugin.export.video.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var o="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},o={};function r(e){var n=o[e];if(void 0!==n)return n.exports;var s=o[e]={exports:{}};return t[e](s,s.exports,r),s.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{r.r(n),r.d(n,{loadExportVideoPlugin:()=>p});var e=r(303);const t=["webm","ogg","mp4","x-matroska"],o=["vp9","vp9.0","vp8","vp8.0","avc1","av1","h265","h.265","h264","h.264","opus","pcm","aac","mpeg","mp4a"];class s{constructor(r,n){this._supportedTypes=[],this._exportVideo=async t=>{const o=this._container.canvas.element;if(o)return new Promise((r=>{const n=o.captureStream(t.fps??this._container.actualOptions.fpsLimit),s=t.mimeType??this._supportedTypes[0],i=new MediaRecorder(n,{mimeType:s}),p=[];i.addEventListener("dataavailable",(e=>{p.push(e.data)})),i.addEventListener("stop",(()=>{r(new Blob(p,{type:s}))})),i.start(),setTimeout((()=>{i.stop()}),t.duration??5*e.millisecondsToSeconds)}))},this._container=r,this._engine=n,this._supportedTypes=function(){const e=e=>MediaRecorder.isTypeSupported(e),r=[];return t.forEach((t=>{const n=`video/${t}`;o.forEach((t=>[`${n};codecs=${t}`,`${n};codecs=${t.toUpperCase()}`].forEach((t=>{e(t)&&r.push(t)})))),e(n)&&r.push(n)})),r}()}async export(e,t){const o={supported:!1};if("video"===e)o.supported=!0,o.blob=await this._exportVideo(t);return o}}class i{constructor(e){this.id="export-video",this._engine=e}getPlugin(e){return Promise.resolve(new s(e,this._engine))}loadOptions(){}needsPlugin(){return!0}}async function p(e,t=!0){await e.addPlugin(new i(e),t)}})(),n})()));