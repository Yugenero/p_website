/*! For license information please see tsparticles.shape.cog.min.js.LICENSE.txt */
!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],o);else{var t="object"==typeof exports?o(require("@tsparticles/engine")):o(e.window);for(var n in t)("object"==typeof exports?exports:e)[n]=t[n]}}(this,(e=>(()=>{var o={303:o=>{o.exports=e}},t={};function n(e){var r=t[e];if(void 0!==r)return r.exports;var a=t[e]={exports:{}};return o[e](a,a.exports,n),a.exports}n.d=(e,o)=>{for(var t in o)n.o(o,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},n.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{n.r(r),n.d(r,{loadCogShape:()=>c});var e=n(303);const o=2*Math.PI,t=0,a=0;class i{constructor(){this.validTypes=["cog"]}afterDraw(n){!function(n){const{context:r,particle:i,radius:c}=n;if(void 0===i.cogHoleRadius||void 0===i.cogInnerRadius||void 0===i.cogInnerTaper||void 0===i.cogNotches||void 0===i.cogOuterTaper)return;const s=c*i.cogHoleRadius/e.percentDenominator;r.globalCompositeOperation="destination-out",r.beginPath(),r.moveTo(s,a),r.arc(t,a,s,0,o),r.closePath(),r.fill(),r.globalCompositeOperation="source-over"}(n)}draw(t){!function(t){const{context:n,particle:r,radius:a}=t;if(void 0===r.cogHoleRadius||void 0===r.cogInnerRadius||void 0===r.cogInnerTaper||void 0===r.cogNotches||void 0===r.cogOuterTaper)return;const i=o/(2*r.cogNotches),c=i*r.cogInnerTaper*.005,s=i*r.cogOuterTaper*.005,p=a*r.cogInnerRadius/e.percentDenominator;let u=i,d=!1;for(n.moveTo(a*Math.cos(s),a*Math.sin(s));u<=o;u+=i)d?(n.lineTo(p*Math.cos(u-c),p*Math.sin(u-c)),n.lineTo(a*Math.cos(u+s),a*Math.sin(u+s))):(n.lineTo(a*Math.cos(u-s),a*Math.sin(u-s)),n.lineTo(p*Math.cos(u+c),p*Math.sin(u+c))),d=!d}(t)}particleInit(o,t){const n=t.shapeData;t.cogHoleRadius=(0,e.getRangeValue)(n?.holeRadius??44),t.cogInnerRadius=(0,e.getRangeValue)(n?.innerRadius??72),t.cogInnerTaper=(0,e.getRangeValue)(n?.innerTaper??35),t.cogNotches=(0,e.getRangeValue)(n?.notches??7),t.cogOuterTaper=(0,e.getRangeValue)(n?.outerTaper??50)}}async function c(e,o=!0){await e.addShape(new i,o)}})(),r})()));