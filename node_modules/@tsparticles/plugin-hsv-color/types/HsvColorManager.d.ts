import { type IColor, type IColorManager, type IHsl, type IHsla, type IHsv, type IHsva, type IRangeColor, type IRgb, type IRgba } from "@tsparticles/engine";
export declare function rgbToHsv(rgb: IRgb): IHsv;
export declare function rgbaToHsva(rgba: IRgba): IHsva;
export declare function getStyleFromHsv(color: IHsv, opacity?: number): string;
export declare function hslToHsv(hsl: IHsl): IHsv;
export declare function hslaToHsva(hsla: IHsla): IHsva;
export declare function hsvToHsl(hsv: IHsv): IHsl;
export declare function hsvaToHsla(hsva: IHsva): IHsla;
export declare function hsvToRgb(hsv: IHsv): IRgb;
export declare function hsvaToRgba(hsva: IHsva): IRgba;
export declare class HsvColorManager implements IColorManager {
    readonly key: string;
    readonly stringPrefix: string;
    constructor();
    handleColor(color: IColor): IRgb | undefined;
    handleRangeColor(color: IRangeColor): IRgb | undefined;
    parseString(input: string): IRgba | undefined;
}
