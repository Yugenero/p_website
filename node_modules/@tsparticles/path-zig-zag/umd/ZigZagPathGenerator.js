(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@tsparticles/engine"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ZigZagPathGenerator = void 0;
    const engine_1 = require("@tsparticles/engine");
    const angularFrequencyFactor = 0.5, half = 0.5, halfPI = Math.PI * half;
    class ZigZagPathGenerator {
        constructor() {
            this.options = {
                waveHeight: { min: 0, max: 3 },
                waveLength: { min: 0, max: 5 },
            };
        }
        generate(particle, delta) {
            if (particle.zigzag === undefined) {
                particle.zigzag = {
                    counter: (0, engine_1.getRandom)(),
                    waveHeight: (0, engine_1.getRangeValue)(this.options.waveHeight),
                    waveLength: (0, engine_1.getRangeValue)(this.options.waveLength),
                };
            }
            const angularFrequency = (angularFrequencyFactor / particle.zigzag.waveLength) * delta.factor;
            particle.zigzag.counter += angularFrequency;
            const zigzagAngle = particle.zigzag.waveHeight * Math.sin(particle.zigzag.counter);
            particle.position.x += zigzagAngle * Math.cos(particle.velocity.angle + halfPI);
            particle.position.y += zigzagAngle * Math.sin(particle.velocity.angle + halfPI);
            return engine_1.Vector.origin;
        }
        init(container) {
            const options = container.actualOptions.particles.move.path.options;
            this.options.waveLength = options.waveLength ?? this.options.waveLength;
            this.options.waveHeight = options.waveHeight ?? this.options.waveHeight;
        }
        reset() {
        }
        update() {
        }
    }
    exports.ZigZagPathGenerator = ZigZagPathGenerator;
});
