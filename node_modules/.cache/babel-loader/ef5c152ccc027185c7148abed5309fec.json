{"ast":null,"code":"import _objectSpread from \"/Users/nero/Desktop/local_workspace/personal_website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { Burger } from './Burger';\nimport React from 'react';\nexport var Sling = function Sling(props) {\n  return /*#__PURE__*/React.createElement(Burger, _extends({}, props, {\n    render: function render(o) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hamburger-react\",\n        \"aria-label\": o.label,\n        \"aria-expanded\": o.isToggled,\n        onClick: o.handler,\n        onKeyUp: function onKeyUp(e) {\n          return e.key === 'Enter' && o.handler();\n        },\n        role: \"button\",\n        style: _objectSpread({}, o.burgerStyles, {\n          transform: \"\".concat(o.isToggled ? \"rotateY(\".concat(180 * (o.isLeft ? -1 : 1), \"deg)\") : 'none')\n        }),\n        tabIndex: 0\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: _objectSpread({}, o.barStyles, {\n          width: \"\".concat(o.width, \"px\"),\n          top: \"\".concat(o.topOffset, \"px\"),\n          transition: \"\".concat(o.time, \"s \").concat(o.easing),\n          transform: \"\".concat(o.isToggled ? \"rotate(\".concat(45 * (o.isLeft ? -1 : 1), \"deg) translate(\").concat(o.move * (o.isLeft ? -1 : 1), \"px, \").concat(o.move, \"px)\") : 'none')\n        })\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: _objectSpread({}, o.barStyles, {\n          width: \"\".concat(o.width, \"px\"),\n          top: \"\".concat(o.topOffset + o.barHeight + o.margin, \"px\"),\n          transition: \"\".concat(o.time, \"s \").concat(o.easing),\n          transform: \"\".concat(o.isToggled ? \"scale(0, 1) translate(\".concat(o.move * 20 * (o.isLeft ? -1 : 1), \"px, 0)\") : 'none')\n        })\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: _objectSpread({}, o.barStyles, {\n          width: \"\".concat(o.width, \"px\"),\n          top: \"\".concat(o.topOffset + o.barHeight * 2 + o.margin * 2, \"px\"),\n          transition: \"\".concat(o.time, \"s \").concat(o.easing),\n          transform: \"\".concat(o.isToggled ? \"rotate(\".concat(45 * (o.isLeft ? 1 : -1), \"deg) translate(\").concat(o.move * (o.isLeft ? -1 : 1), \"px, \").concat(o.move * -1, \"px)\") : 'none')\n        })\n      }));\n    }\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}