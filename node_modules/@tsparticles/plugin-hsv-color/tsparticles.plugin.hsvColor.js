/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.4.0
 */
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@tsparticles/engine"));
	else if(typeof define === 'function' && define.amd)
		define(["@tsparticles/engine"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("@tsparticles/engine")) : factory(root["window"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, (__WEBPACK_EXTERNAL_MODULE__tsparticles_engine__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/browser/HsvColorManager.js":
/*!*****************************************!*\
  !*** ./dist/browser/HsvColorManager.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HsvColorManager: () => (/* binding */ HsvColorManager),\n/* harmony export */   getStyleFromHsv: () => (/* binding */ getStyleFromHsv),\n/* harmony export */   hslToHsv: () => (/* binding */ hslToHsv),\n/* harmony export */   hslaToHsva: () => (/* binding */ hslaToHsva),\n/* harmony export */   hsvToHsl: () => (/* binding */ hsvToHsl),\n/* harmony export */   hsvToRgb: () => (/* binding */ hsvToRgb),\n/* harmony export */   hsvaToHsla: () => (/* binding */ hsvaToHsla),\n/* harmony export */   hsvaToRgba: () => (/* binding */ hsvaToRgba),\n/* harmony export */   rgbToHsv: () => (/* binding */ rgbToHsv),\n/* harmony export */   rgbaToHsva: () => (/* binding */ rgbaToHsva)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nconst rgbFactor = 255,\n  double = 2,\n  half = 0.5;\nfunction rgbToHsv(rgb) {\n  const rgbPercent = {\n      r: rgb.r / rgbFactor,\n      g: rgb.g / rgbFactor,\n      b: rgb.b / rgbFactor\n    },\n    xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n    xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n    v = xMax,\n    c = xMax - xMin;\n  let h = 0;\n  const phaseOffset = {\n      r: 0,\n      g: 2,\n      b: 4\n    },\n    phaseValue = 60;\n  if (v === rgbPercent.r) {\n    h = phaseValue * (phaseOffset.r + (rgbPercent.g - rgbPercent.b) / c);\n  } else if (v === rgbPercent.g) {\n    h = phaseValue * (phaseOffset.g + (rgbPercent.b - rgbPercent.r) / c);\n  } else if (v === rgbPercent.b) {\n    h = phaseValue * (phaseOffset.b + (rgbPercent.r - rgbPercent.g) / c);\n  }\n  const defaultSaturation = 0,\n    s = !v ? defaultSaturation : c / v;\n  return {\n    h,\n    s: s * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n    v: v * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator\n  };\n}\nfunction rgbaToHsva(rgba) {\n  return {\n    a: rgba.a,\n    ...rgbToHsv(rgba)\n  };\n}\nfunction getStyleFromHsv(color, opacity) {\n  return (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getStyleFromHsl)(hsvToHsl(color), opacity);\n}\nfunction hslToHsv(hsl) {\n  const l = hsl.l / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n    sl = hsl.s / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n    offset = 1,\n    noValue = 0,\n    v = l + sl * Math.min(l, offset - l),\n    sv = !v ? noValue : double * (offset - l / v);\n  return {\n    h: hsl.h,\n    s: sv * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n    v: v * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator\n  };\n}\nfunction hslaToHsva(hsla) {\n  return {\n    a: hsla.a,\n    ...hslToHsv(hsla)\n  };\n}\nfunction hsvToHsl(hsv) {\n  const v = hsv.v / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n    sv = hsv.s / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n    offset = 1,\n    noValue = 0,\n    l = v * (offset - sv * half),\n    sl = !l || l === offset ? noValue : (v - l) / Math.min(l, offset - l);\n  return {\n    h: hsv.h,\n    l: l * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n    s: sl * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator\n  };\n}\nfunction hsvaToHsla(hsva) {\n  return {\n    a: hsva.a,\n    ...hsvToHsl(hsva)\n  };\n}\nfunction hsvToRgb(hsv) {\n  const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    },\n    phase = 60,\n    hsvPercent = {\n      h: hsv.h / phase,\n      s: hsv.s / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator,\n      v: hsv.v / _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.percentDenominator\n    },\n    offset = 1,\n    hPercentFactor = 2,\n    c = hsvPercent.v * hsvPercent.s,\n    x = c * (offset - Math.abs(hsvPercent.h % hPercentFactor - offset));\n  let tempRgb;\n  const cxzRange = {\n      min: 0,\n      max: 1\n    },\n    xczRange = {\n      min: 1,\n      max: 2\n    },\n    zcxRange = {\n      min: 2,\n      max: 3\n    },\n    zxcRange = {\n      min: 3,\n      max: 4\n    },\n    xzcRange = {\n      min: 4,\n      max: 5\n    },\n    czxRange = {\n      min: 5,\n      max: 6\n    };\n  if (hsvPercent.h >= cxzRange.min && hsvPercent.h <= cxzRange.max) {\n    tempRgb = {\n      r: c,\n      g: x,\n      b: 0\n    };\n  } else if (hsvPercent.h > xczRange.min && hsvPercent.h <= xczRange.max) {\n    tempRgb = {\n      r: x,\n      g: c,\n      b: 0\n    };\n  } else if (hsvPercent.h > zcxRange.min && hsvPercent.h <= zcxRange.max) {\n    tempRgb = {\n      r: 0,\n      g: c,\n      b: x\n    };\n  } else if (hsvPercent.h > zxcRange.min && hsvPercent.h <= zxcRange.max) {\n    tempRgb = {\n      r: 0,\n      g: x,\n      b: c\n    };\n  } else if (hsvPercent.h > xzcRange.min && hsvPercent.h <= xzcRange.max) {\n    tempRgb = {\n      r: x,\n      g: 0,\n      b: c\n    };\n  } else if (hsvPercent.h > czxRange.min && hsvPercent.h <= czxRange.max) {\n    tempRgb = {\n      r: c,\n      g: 0,\n      b: x\n    };\n  }\n  if (tempRgb) {\n    const m = hsvPercent.v - c;\n    result.r = Math.floor((tempRgb.r + m) * rgbFactor);\n    result.g = Math.floor((tempRgb.g + m) * rgbFactor);\n    result.b = Math.floor((tempRgb.b + m) * rgbFactor);\n  }\n  return result;\n}\nfunction hsvaToRgba(hsva) {\n  return {\n    a: hsva.a,\n    ...hsvToRgb(hsva)\n  };\n}\nclass HsvColorManager {\n  constructor() {\n    this.key = \"hsv\";\n    this.stringPrefix = \"hsv\";\n  }\n  handleColor(color) {\n    const colorValue = color.value,\n      hsvColor = colorValue.hsv ?? color.value;\n    if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n      return hsvToRgb(hsvColor);\n    }\n  }\n  handleRangeColor(color) {\n    const colorValue = color.value,\n      hsvColor = colorValue.hsv ?? color.value;\n    if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n      return hsvToRgb({\n        h: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(hsvColor.h),\n        s: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(hsvColor.s),\n        v: (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(hsvColor.v)\n      });\n    }\n  }\n  parseString(input) {\n    if (!input.startsWith(\"hsv\")) {\n      return;\n    }\n    const regex = /hsva?\\(\\s*(\\d+)Â°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i,\n      result = regex.exec(input),\n      fullLength = 4,\n      indexes = {\n        h: 1,\n        s: 2,\n        v: 3,\n        a: 5\n      },\n      defaultAlpha = 1,\n      radix = 10;\n    return result ? hsvaToRgba({\n      a: result.length > fullLength ? (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.parseAlpha)(result[indexes.a]) : defaultAlpha,\n      h: parseInt(result[indexes.h], radix),\n      s: parseInt(result[indexes.s], radix),\n      v: parseInt(result[indexes.v], radix)\n    }) : undefined;\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-hsv-color/./dist/browser/HsvColorManager.js?");

/***/ }),

/***/ "./dist/browser/index.js":
/*!*******************************!*\
  !*** ./dist/browser/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadHsvColorPlugin: () => (/* binding */ loadHsvColorPlugin)\n/* harmony export */ });\n/* harmony import */ var _HsvColorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HsvColorManager.js */ \"./dist/browser/HsvColorManager.js\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction loadHsvColorPlugin() {\n  (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.addColorManager)(new _HsvColorManager_js__WEBPACK_IMPORTED_MODULE_1__.HsvColorManager());\n  return Promise.resolve();\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-hsv-color/./dist/browser/index.js?");

/***/ }),

/***/ "@tsparticles/engine":
/*!*********************************************************************************************************************************!*\
  !*** external {"commonjs":"@tsparticles/engine","commonjs2":"@tsparticles/engine","amd":"@tsparticles/engine","root":"window"} ***!
  \*********************************************************************************************************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__tsparticles_engine__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./dist/browser/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});