/*!
 * Author : Matteo Bruni
 * MIT license: https://opensource.org/licenses/MIT
 * Demo / Generator : https://particles.js.org/
 * GitHub : https://www.github.com/matteobruni/tsparticles
 * How to use? : Check the GitHub README
 * v3.4.0
 */
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@tsparticles/engine"));
	else if(typeof define === 'function' && define.amd)
		define(["@tsparticles/engine"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("@tsparticles/engine")) : factory(root["window"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, (__WEBPACK_EXTERNAL_MODULE__tsparticles_engine__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/browser/Infecter.js":
/*!**********************************!*\
  !*** ./dist/browser/Infecter.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Infecter: () => (/* binding */ Infecter)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nconst minStage = 0,\n  minDuration = 0;\nclass Infecter {\n  constructor(container) {\n    this._nextInfectionStage = particle => {\n      const infectionOptions = this._container.actualOptions.infection,\n        {\n          infection\n        } = particle;\n      if (!infectionOptions || !infection) {\n        return;\n      }\n      const stagesCount = infectionOptions.stages.length;\n      if (stagesCount <= minStage || infection.stage === undefined) {\n        return;\n      }\n      infection.time = 0;\n      if (stagesCount <= ++infection.stage) {\n        if (infectionOptions.cure) {\n          delete infection.stage;\n          delete infection.time;\n        } else {\n          infection.stage = 0;\n          infection.time = 0;\n        }\n      }\n    };\n    this._container = container;\n  }\n  startInfection(particle, stage) {\n    const infectionOptions = this._container.actualOptions.infection,\n      {\n        infection\n      } = particle;\n    if (!infectionOptions || !infection) {\n      return;\n    }\n    const stages = infectionOptions.stages,\n      stagesCount = stages.length;\n    if (stage > stagesCount || stage < minStage) {\n      return;\n    }\n    infection.delay = 0;\n    infection.delayStage = stage;\n  }\n  updateInfection(particle, delta) {\n    const infectionOptions = this._container.actualOptions.infection,\n      {\n        infection\n      } = particle;\n    if (!infectionOptions || !infection) {\n      return;\n    }\n    const stages = infectionOptions.stages,\n      stagesCount = stages.length;\n    if (infection.delay !== undefined && infection.delayStage !== undefined) {\n      const stage = infection.delayStage;\n      if (stage > stagesCount || stage < minStage) {\n        return;\n      }\n      if (infection.delay >= infectionOptions.delay * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.millisecondsToSeconds) {\n        infection.stage = stage;\n        infection.time = 0;\n        delete infection.delay;\n        delete infection.delayStage;\n      } else {\n        infection.delay += delta;\n      }\n    } else {\n      delete infection.delay;\n      delete infection.delayStage;\n    }\n    if (infection.stage !== undefined && infection.time !== undefined) {\n      const infectionStage = stages[infection.stage];\n      if (infectionStage.duration !== undefined && infectionStage.duration >= minDuration) {\n        if (infection.time > infectionStage.duration * _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.millisecondsToSeconds) {\n          this._nextInfectionStage(particle);\n        } else {\n          infection.time += delta;\n        }\n      } else {\n        infection.time += delta;\n      }\n    } else {\n      delete infection.stage;\n      delete infection.time;\n    }\n  }\n  updateInfectionStage(particle, stage) {\n    const options = this._container.actualOptions,\n      {\n        infection\n      } = particle;\n    if (!options.infection || !infection) {\n      return;\n    }\n    const stagesCount = options.infection.stages.length;\n    if (stage > stagesCount || stage < minStage || infection.stage !== undefined && infection.stage > stage) {\n      return;\n    }\n    infection.stage = stage;\n    infection.time = 0;\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-infection/./dist/browser/Infecter.js?");

/***/ }),

/***/ "./dist/browser/InfectionInstance.js":
/*!*******************************************!*\
  !*** ./dist/browser/InfectionInstance.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfectionInstance: () => (/* binding */ InfectionInstance)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Infecter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Infecter.js */ \"./dist/browser/Infecter.js\");\n\n\nconst minStage = 0;\nclass InfectionInstance {\n  constructor(container) {\n    this._container = container;\n    this._container.infecter = new _Infecter_js__WEBPACK_IMPORTED_MODULE_1__.Infecter(this._container);\n  }\n  particleFillColor(particle) {\n    const options = this._container.actualOptions;\n    if (!particle.infection || !options.infection) {\n      return;\n    }\n    const infectionStage = particle.infection.stage,\n      infection = options.infection,\n      infectionStages = infection.stages;\n    return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n  }\n  particleStrokeColor(particle) {\n    return this.particleFillColor(particle);\n  }\n  particlesSetup() {\n    const options = this._container.actualOptions;\n    if (!options.infection) {\n      return;\n    }\n    for (let i = 0; i < options.infection.infections; i++) {\n      const notInfected = this._container.particles.filter(p => {\n        const infP = p;\n        if (!infP.infection) {\n          infP.infection = {};\n        }\n        return infP.infection.stage === undefined;\n      });\n      const infected = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.itemFromArray)(notInfected);\n      this._container.infecter?.startInfection(infected, minStage);\n    }\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-infection/./dist/browser/InfectionInstance.js?");

/***/ }),

/***/ "./dist/browser/InfectionPlugin.js":
/*!*****************************************!*\
  !*** ./dist/browser/InfectionPlugin.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfectionPlugin: () => (/* binding */ InfectionPlugin)\n/* harmony export */ });\n/* harmony import */ var _Options_Classes_Infection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Options/Classes/Infection.js */ \"./dist/browser/Options/Classes/Infection.js\");\n/* harmony import */ var _InfectionInstance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InfectionInstance.js */ \"./dist/browser/InfectionInstance.js\");\n\n\nclass InfectionPlugin {\n  constructor() {\n    this.id = \"infection\";\n  }\n  getPlugin(container) {\n    return Promise.resolve(new _InfectionInstance_js__WEBPACK_IMPORTED_MODULE_0__.InfectionInstance(container));\n  }\n  loadOptions(options, source) {\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n    let infectionOptions = options.infection;\n    if (infectionOptions?.load === undefined) {\n      options.infection = infectionOptions = new _Options_Classes_Infection_js__WEBPACK_IMPORTED_MODULE_1__.Infection();\n    }\n    infectionOptions.load(source?.infection);\n  }\n  needsPlugin(options) {\n    return options?.infection?.enable ?? false;\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-infection/./dist/browser/InfectionPlugin.js?");

/***/ }),

/***/ "./dist/browser/Options/Classes/Infection.js":
/*!***************************************************!*\
  !*** ./dist/browser/Options/Classes/Infection.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Infection: () => (/* binding */ Infection)\n/* harmony export */ });\n/* harmony import */ var _InfectionStage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InfectionStage.js */ \"./dist/browser/Options/Classes/InfectionStage.js\");\n\nclass Infection {\n  constructor() {\n    this.cure = false;\n    this.delay = 0;\n    this.enable = false;\n    this.infections = 0;\n    this.stages = [];\n  }\n  load(data) {\n    if (data === undefined) {\n      return;\n    }\n    if (data.cure !== undefined) {\n      this.cure = data.cure;\n    }\n    if (data.delay !== undefined) {\n      this.delay = data.delay;\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    if (data.infections !== undefined) {\n      this.infections = data.infections;\n    }\n    if (data.stages === undefined) {\n      return;\n    }\n    this.stages = data.stages.map(t => {\n      const s = new _InfectionStage_js__WEBPACK_IMPORTED_MODULE_0__.InfectionStage();\n      s.load(t);\n      return s;\n    });\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-infection/./dist/browser/Options/Classes/Infection.js?");

/***/ }),

/***/ "./dist/browser/Options/Classes/InfectionStage.js":
/*!********************************************************!*\
  !*** ./dist/browser/Options/Classes/InfectionStage.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InfectionStage: () => (/* binding */ InfectionStage)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nclass InfectionStage {\n  constructor() {\n    this.color = new _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.OptionsColor();\n    this.color.value = \"#ff0000\";\n    this.radius = 0;\n    this.rate = 1;\n  }\n  load(data) {\n    if (data === undefined) {\n      return;\n    }\n    if (data.color !== undefined) {\n      this.color = _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.OptionsColor.create(this.color, data.color);\n    }\n    this.duration = data.duration;\n    this.infectedStage = data.infectedStage;\n    if (data.radius !== undefined) {\n      this.radius = data.radius;\n    }\n    if (data.rate !== undefined) {\n      this.rate = data.rate;\n    }\n  }\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-infection/./dist/browser/Options/Classes/InfectionStage.js?");

/***/ }),

/***/ "./dist/browser/ParticlesInfecter.js":
/*!*******************************************!*\
  !*** ./dist/browser/ParticlesInfecter.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParticlesInfecter: () => (/* binding */ ParticlesInfecter)\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"@tsparticles/engine\");\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__);\n\nconst minStagesCount = 1,\n  double = 2;\nclass ParticlesInfecter extends _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {}\n  interact(p1, delta) {\n    const infecter = this.container.infecter;\n    if (!infecter) {\n      return;\n    }\n    infecter.updateInfection(p1, delta.value);\n    if (p1.infection?.stage === undefined) {\n      return;\n    }\n    const container = this.container,\n      options = container.actualOptions,\n      infectionOptions = options.infection;\n    if (!infectionOptions?.enable || infectionOptions.stages.length < minStagesCount) {\n      return;\n    }\n    const infectionStage1 = infectionOptions.stages[p1.infection.stage],\n      pxRatio = container.retina.pixelRatio,\n      radius = p1.getRadius() * double + infectionStage1.radius * pxRatio,\n      pos = p1.getPosition(),\n      infectedStage1 = infectionStage1.infectedStage ?? p1.infection.stage,\n      query = container.particles.quadTree.queryCircle(pos, radius),\n      infections = infectionStage1.rate,\n      neighbors = query.length;\n    for (const p2 of query) {\n      const infP2 = p2;\n      if (infP2 === p1 || infP2.destroyed || infP2.spawning || !(infP2.infection?.stage === undefined || infP2.infection.stage !== p1.infection.stage) || (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getRandom)() >= infections / neighbors) {\n        continue;\n      }\n      if (infP2.infection?.stage === undefined) {\n        infecter.startInfection(infP2, infectedStage1);\n      } else if (infP2.infection.stage < p1.infection.stage) {\n        infecter.updateInfectionStage(infP2, infectedStage1);\n      } else if (infP2.infection.stage > p1.infection.stage) {\n        const infectionStage2 = infectionOptions.stages[infP2.infection.stage];\n        const infectedStage2 = infectionStage2?.infectedStage ?? infP2.infection.stage;\n        infecter.updateInfectionStage(p1, infectedStage2);\n      }\n    }\n  }\n  isEnabled() {\n    return this.container.actualOptions?.infection?.enable ?? false;\n  }\n  reset() {}\n}\n\n//# sourceURL=webpack://@tsparticles/plugin-infection/./dist/browser/ParticlesInfecter.js?");

/***/ }),

/***/ "./dist/browser/index.js":
/*!*******************************!*\
  !*** ./dist/browser/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadInfectionPlugin: () => (/* binding */ loadInfectionPlugin)\n/* harmony export */ });\n/* harmony import */ var _InfectionPlugin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InfectionPlugin.js */ \"./dist/browser/InfectionPlugin.js\");\n/* harmony import */ var _ParticlesInfecter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ParticlesInfecter.js */ \"./dist/browser/ParticlesInfecter.js\");\n\n\nasync function loadInfectionPlugin(engine, refresh = true) {\n  const plugin = new _InfectionPlugin_js__WEBPACK_IMPORTED_MODULE_0__.InfectionPlugin();\n  await engine.addPlugin(plugin, refresh);\n  await engine.addInteractor(\"particlesInfection\", container => {\n    return Promise.resolve(new _ParticlesInfecter_js__WEBPACK_IMPORTED_MODULE_1__.ParticlesInfecter(container));\n  }, refresh);\n}\n\n\n\n//# sourceURL=webpack://@tsparticles/plugin-infection/./dist/browser/index.js?");

/***/ }),

/***/ "@tsparticles/engine":
/*!*********************************************************************************************************************************!*\
  !*** external {"commonjs":"@tsparticles/engine","commonjs2":"@tsparticles/engine","amd":"@tsparticles/engine","root":"window"} ***!
  \*********************************************************************************************************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE__tsparticles_engine__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./dist/browser/index.js");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});