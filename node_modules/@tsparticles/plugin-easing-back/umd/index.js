(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@tsparticles/engine"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.loadEasingBackPlugin = void 0;
    const engine_1 = require("@tsparticles/engine");
    async function loadEasingBackPlugin() {
        (0, engine_1.addEasing)(engine_1.EasingType.easeInBack, value => {
            const c1 = 1.70158, c3 = c1 + 1;
            return c3 * value ** 3 - c1 * value ** 2;
        });
        (0, engine_1.addEasing)(engine_1.EasingType.easeOutBack, value => {
            const c1 = 1.70158, c3 = c1 + 1;
            return 1 + c3 * Math.pow(value - 1, 3) + c1 * Math.pow(value - 1, 2);
        });
        (0, engine_1.addEasing)(engine_1.EasingType.easeInOutBack, value => {
            const c1 = 1.70158, c2 = c1 * 1.525;
            return value < 0.5
                ? ((2 * value) ** 2 * ((c2 + 1) * 2 * value - c2)) / 2
                : ((2 * value - 2) ** 2 * ((c2 + 1) * (value * 2 - 2) + c2) + 2) / 2;
        });
        await Promise.resolve();
    }
    exports.loadEasingBackPlugin = loadEasingBackPlugin;
});
