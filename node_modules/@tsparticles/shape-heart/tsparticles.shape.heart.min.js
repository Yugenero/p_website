/*! For license information please see tsparticles.shape.heart.min.js.LICENSE.txt */
!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o();else if("function"==typeof define&&define.amd)define([],o);else{var t=o();for(var r in t)("object"==typeof exports?exports:e)[r]=t[r]}}(this,(()=>(()=>{var e={d:(o,t)=>{for(var r in t)e.o(t,r)&&!e.o(o,r)&&Object.defineProperty(o,r,{enumerable:!0,get:t[r]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};e.r(o),e.d(o,{loadHeartShape:()=>r});class t{constructor(){this.validTypes=["heart"]}draw(e){!function(e){const{context:o,radius:t}=e,r=2*t,a=.5*t,i=t+a,n=-t,d=-t;o.moveTo(n,d+a),o.quadraticCurveTo(n,d,n+a,d),o.quadraticCurveTo(n+t,d,n+t,d+a),o.quadraticCurveTo(n+t,d,n+i,d),o.quadraticCurveTo(n+r,d,n+r,d+a),o.quadraticCurveTo(n+r,d+t,n+i,d+i),o.lineTo(n+t,d+r),o.lineTo(n+a,d+i),o.quadraticCurveTo(n,d+t,n,d+a)}(e)}}async function r(e,o=!0){await e.addShape(new t,o)}return o})()));