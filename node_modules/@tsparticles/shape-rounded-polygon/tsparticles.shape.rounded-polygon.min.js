/*! For license information please see tsparticles.shape.rounded-polygon.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var o="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},o={};function r(e){var n=o[e];if(void 0!==n)return n.exports;var a=o[e]={exports:{}};return t[e](a,a.exports,r),a.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{r.r(n),r.d(n,{loadRoundedPolygonShape:()=>i});var e=r(303);const t=2*Math.PI,o=.5;class a{constructor(){this.validTypes=["rounded-polygon"]}draw(e){const{context:r,particle:n,radius:a}=e;!function(e,t,r){let n=t[0],a=t[1];const i=t.length;e.moveTo((n.x+a.x)*o,(n.y+a.y)*o);for(let s=1;s<=i;s++)n=a,a=t[(s+1)%i],e.arcTo(n.x,n.y,(n.x+a.x)*o,(n.y+a.y)*o,r)}(r,function(e,o,r=0){const n=t/e,a=[];for(let t=0;t<e;t++)a.push({x:Math.cos(t*n+r)*o,y:Math.sin(t*n+r)*o});return a}(n.sides,a),n.borderRadius??5)}getSidesCount(t){const o=t.shapeData;return Math.round((0,e.getRangeValue)(o?.sides??5))}particleInit(t,o){const r=o.shapeData;o.borderRadius=Math.round((0,e.getRangeValue)(r?.radius??5))*t.retina.pixelRatio}}async function i(e,t=!0){await e.addShape(new a,t)}})(),n})()));