/*! For license information please see tsparticles.plugin.export.json.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var n in o)("object"==typeof exports?exports:e)[n]=o[n]}}(this,(()=>(()=>{var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{loadExportJSONPlugin:()=>r});class o{constructor(e,t){this._exportJSON=async()=>{const e=JSON.stringify(this._container.actualOptions,((e,t)=>{if(!e.startsWith("_"))return t}),2);return Promise.resolve(new Blob([e],{type:"application/json"}))},this._container=e,this._engine=t}async export(e){const t={supported:!1};if("json"===e)t.supported=!0,t.blob=await this._exportJSON();return t}}class n{constructor(e){this.id="export-json",this._engine=e}getPlugin(e){return Promise.resolve(new o(e,this._engine))}loadOptions(){}needsPlugin(){return!0}}async function r(e,t=!0){await e.addPlugin(new n(e),t)}return t})()));