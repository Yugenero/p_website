{"ast":null,"code":"import { useState } from 'react';\nconst area = 48;\nexport const Burger = ({\n  color = 'currentColor',\n  direction = 'left',\n  distance = 'md',\n  duration = 0.4,\n  easing = 'cubic-bezier(0, 0, 0, 1)',\n  hideOutline = true,\n  label,\n  lines = 3,\n  onToggle,\n  render,\n  rounded = false,\n  size = 32,\n  toggle,\n  toggled\n}) => {\n  const [toggledInternal, toggleInternal] = useState(false);\n  const width = Math.max(12, Math.min(area, size));\n  const room = Math.round((area - width) / 2);\n  const barHeightRaw = width / 12;\n  const barHeight = Math.round(barHeightRaw);\n  const space = distance === 'lg' ? 0.25 : distance === 'sm' ? 0.75 : 0.5;\n  const marginRaw = width / (lines * (space + (lines === 3 ? 1 : 1.25)));\n  const margin = Math.round(marginRaw);\n  const height = barHeight * lines + margin * (lines - 1);\n  const topOffset = Math.round((area - height) / 2);\n  const translate = lines === 3 ? distance === 'lg' ? 4.0425 : distance === 'sm' ? 5.1625 : 4.6325 : distance === 'lg' ? 6.7875 : distance === 'sm' ? 8.4875 : 7.6675;\n  const deviation = (barHeightRaw - barHeight + (marginRaw - margin)) / (lines === 3 ? 1 : 2);\n  const move = parseFloat((width / translate - deviation / (4 / 3)).toFixed(2));\n  const time = Math.max(0, duration);\n  const burgerStyles = {\n    cursor: 'pointer',\n    height: `${area}px`,\n    position: 'relative',\n    transition: `${time}s ${easing}`,\n    userSelect: 'none',\n    width: `${area}px`\n  };\n  const barStyles = {\n    background: color,\n    height: `${barHeight}px`,\n    left: `${room}px`,\n    position: 'absolute'\n  };\n  if (hideOutline) {\n    burgerStyles['outline'] = 'none';\n  }\n  if (rounded) {\n    barStyles['borderRadius'] = '9em';\n  }\n  const toggleFunction = toggle || toggleInternal;\n  const isToggled = toggled !== undefined ? toggled : toggledInternal;\n  const handler = () => {\n    toggleFunction(!isToggled);\n    if (typeof onToggle === 'function') onToggle(!isToggled);\n  };\n  return render({\n    barHeight,\n    barStyles,\n    burgerStyles,\n    easing,\n    handler,\n    isLeft: direction === 'left',\n    isToggled,\n    label,\n    margin,\n    move,\n    time,\n    topOffset,\n    width\n  });\n};","map":{"version":3,"names":["useState","area","Burger","color","direction","distance","duration","easing","hideOutline","label","lines","onToggle","render","rounded","size","toggle","toggled","toggledInternal","toggleInternal","width","Math","max","min","room","round","barHeightRaw","barHeight","space","marginRaw","margin","height","topOffset","translate","deviation","move","parseFloat","toFixed","time","burgerStyles","cursor","position","transition","userSelect","barStyles","background","left","toggleFunction","isToggled","undefined","handler","isLeft"],"sources":["/Users/nero/Desktop/local_workspace/personal_website/node_modules/hamburger-react/dist-esm/Burger.js"],"sourcesContent":["import { useState } from 'react';\nconst area = 48;\nexport const Burger = ({\n  color = 'currentColor',\n  direction = 'left',\n  distance = 'md',\n  duration = 0.4,\n  easing = 'cubic-bezier(0, 0, 0, 1)',\n  hideOutline = true,\n  label,\n  lines = 3,\n  onToggle,\n  render,\n  rounded = false,\n  size = 32,\n  toggle,\n  toggled\n}) => {\n  const [toggledInternal, toggleInternal] = useState(false);\n  const width = Math.max(12, Math.min(area, size));\n  const room = Math.round((area - width) / 2);\n  const barHeightRaw = width / 12;\n  const barHeight = Math.round(barHeightRaw);\n  const space = distance === 'lg' ? 0.25 : distance === 'sm' ? 0.75 : 0.5;\n  const marginRaw = width / (lines * (space + (lines === 3 ? 1 : 1.25)));\n  const margin = Math.round(marginRaw);\n  const height = barHeight * lines + margin * (lines - 1);\n  const topOffset = Math.round((area - height) / 2);\n  const translate = lines === 3 ? distance === 'lg' ? 4.0425 : distance === 'sm' ? 5.1625 : 4.6325 : distance === 'lg' ? 6.7875 : distance === 'sm' ? 8.4875 : 7.6675;\n  const deviation = (barHeightRaw - barHeight + (marginRaw - margin)) / (lines === 3 ? 1 : 2);\n  const move = parseFloat((width / translate - deviation / (4 / 3)).toFixed(2));\n  const time = Math.max(0, duration);\n  const burgerStyles = {\n    cursor: 'pointer',\n    height: `${area}px`,\n    position: 'relative',\n    transition: `${time}s ${easing}`,\n    userSelect: 'none',\n    width: `${area}px`\n  };\n  const barStyles = {\n    background: color,\n    height: `${barHeight}px`,\n    left: `${room}px`,\n    position: 'absolute'\n  };\n\n  if (hideOutline) {\n    burgerStyles['outline'] = 'none';\n  }\n\n  if (rounded) {\n    barStyles['borderRadius'] = '9em';\n  }\n\n  const toggleFunction = toggle || toggleInternal;\n  const isToggled = toggled !== undefined ? toggled : toggledInternal;\n\n  const handler = () => {\n    toggleFunction(!isToggled);\n    if (typeof onToggle === 'function') onToggle(!isToggled);\n  };\n\n  return render({\n    barHeight,\n    barStyles,\n    burgerStyles,\n    easing,\n    handler,\n    isLeft: direction === 'left',\n    isToggled,\n    label,\n    margin,\n    move,\n    time,\n    topOffset,\n    width\n  });\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,MAAMC,IAAI,GAAG,EAAE;AACf,OAAO,MAAMC,MAAM,GAAGA,CAAC;EACrBC,KAAK,GAAG,cAAc;EACtBC,SAAS,GAAG,MAAM;EAClBC,QAAQ,GAAG,IAAI;EACfC,QAAQ,GAAG,GAAG;EACdC,MAAM,GAAG,0BAA0B;EACnCC,WAAW,GAAG,IAAI;EAClBC,KAAK;EACLC,KAAK,GAAG,CAAC;EACTC,QAAQ;EACRC,MAAM;EACNC,OAAO,GAAG,KAAK;EACfC,IAAI,GAAG,EAAE;EACTC,MAAM;EACNC;AACF,CAAC,KAAK;EACJ,MAAM,CAACC,eAAe,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMmB,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAED,IAAI,CAACE,GAAG,CAACrB,IAAI,EAAEa,IAAI,CAAC,CAAC;EAChD,MAAMS,IAAI,GAAGH,IAAI,CAACI,KAAK,CAAC,CAACvB,IAAI,GAAGkB,KAAK,IAAI,CAAC,CAAC;EAC3C,MAAMM,YAAY,GAAGN,KAAK,GAAG,EAAE;EAC/B,MAAMO,SAAS,GAAGN,IAAI,CAACI,KAAK,CAACC,YAAY,CAAC;EAC1C,MAAME,KAAK,GAAGtB,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAGA,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG;EACvE,MAAMuB,SAAS,GAAGT,KAAK,IAAIT,KAAK,IAAIiB,KAAK,IAAIjB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;EACtE,MAAMmB,MAAM,GAAGT,IAAI,CAACI,KAAK,CAACI,SAAS,CAAC;EACpC,MAAME,MAAM,GAAGJ,SAAS,GAAGhB,KAAK,GAAGmB,MAAM,IAAInB,KAAK,GAAG,CAAC,CAAC;EACvD,MAAMqB,SAAS,GAAGX,IAAI,CAACI,KAAK,CAAC,CAACvB,IAAI,GAAG6B,MAAM,IAAI,CAAC,CAAC;EACjD,MAAME,SAAS,GAAGtB,KAAK,KAAK,CAAC,GAAGL,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAGA,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAG,MAAM,GAAGA,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAGA,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAG,MAAM;EACnK,MAAM4B,SAAS,GAAG,CAACR,YAAY,GAAGC,SAAS,IAAIE,SAAS,GAAGC,MAAM,CAAC,KAAKnB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC3F,MAAMwB,IAAI,GAAGC,UAAU,CAAC,CAAChB,KAAK,GAAGa,SAAS,GAAGC,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7E,MAAMC,IAAI,GAAGjB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEf,QAAQ,CAAC;EAClC,MAAMgC,YAAY,GAAG;IACnBC,MAAM,EAAE,SAAS;IACjBT,MAAM,EAAG,GAAE7B,IAAK,IAAG;IACnBuC,QAAQ,EAAE,UAAU;IACpBC,UAAU,EAAG,GAAEJ,IAAK,KAAI9B,MAAO,EAAC;IAChCmC,UAAU,EAAE,MAAM;IAClBvB,KAAK,EAAG,GAAElB,IAAK;EACjB,CAAC;EACD,MAAM0C,SAAS,GAAG;IAChBC,UAAU,EAAEzC,KAAK;IACjB2B,MAAM,EAAG,GAAEJ,SAAU,IAAG;IACxBmB,IAAI,EAAG,GAAEtB,IAAK,IAAG;IACjBiB,QAAQ,EAAE;EACZ,CAAC;EAED,IAAIhC,WAAW,EAAE;IACf8B,YAAY,CAAC,SAAS,CAAC,GAAG,MAAM;EAClC;EAEA,IAAIzB,OAAO,EAAE;IACX8B,SAAS,CAAC,cAAc,CAAC,GAAG,KAAK;EACnC;EAEA,MAAMG,cAAc,GAAG/B,MAAM,IAAIG,cAAc;EAC/C,MAAM6B,SAAS,GAAG/B,OAAO,KAAKgC,SAAS,GAAGhC,OAAO,GAAGC,eAAe;EAEnE,MAAMgC,OAAO,GAAGA,CAAA,KAAM;IACpBH,cAAc,CAAC,CAACC,SAAS,CAAC;IAC1B,IAAI,OAAOpC,QAAQ,KAAK,UAAU,EAAEA,QAAQ,CAAC,CAACoC,SAAS,CAAC;EAC1D,CAAC;EAED,OAAOnC,MAAM,CAAC;IACZc,SAAS;IACTiB,SAAS;IACTL,YAAY;IACZ/B,MAAM;IACN0C,OAAO;IACPC,MAAM,EAAE9C,SAAS,KAAK,MAAM;IAC5B2C,SAAS;IACTtC,KAAK;IACLoB,MAAM;IACNK,IAAI;IACJG,IAAI;IACJN,SAAS;IACTZ;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}